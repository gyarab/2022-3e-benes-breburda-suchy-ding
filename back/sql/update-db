#!/bin/bash

set -e

# Update script similar to db-tool for use without superuser access.
# Can only update the database from updateXX.sql files. Needs an
# additional DB_UPDATE_USER config setting in the db-tool config file.

sql_temp=$(mktemp)

PARSED=$(getopt -s bash -o nu:c: --longoptions no-dry-run,user:,host:,config: --name "ERROR" -- "$@")
[[ $? -ne 0 ]] && exit 1

err() {
    echo "ERROR: $1"
    exit 1
}

eval set -- "$PARSED"
while true; do
case "$1" in
        -n|--no-dry-run)
		no_dry_run=1
		shift
		;;
        -u|--user)
		db_user=$2
		shift 2
		;;
        --host)
		export PGHOST=$2
		shift 2
		;;
        -c|--config)
		config_file=$2
		shift 2
		;;
        --)
		shift
		break
		;;
        *)
		err "Unhanled option (this should not happen)"
		;;
esac
done

[ -z "$config_file" ] || . `realpath $config_file` || err "Failed to load config"
[ -n "$DB_NAME" ] || err "DB_NAME not specified"
[ -z "$db_user" ] && db_user="$DB_UPDATE_USER"
db_main_schema="${MAIN_SCHEMA:-main}"

[ -z "$db_user" ] || export PGUSER=$db_user

psql_run() {
    psql -X -U "$db_user" "$@"
}

{
    echo "\\set ON_ERROR_STOP on"
    echo "\\set QUIET on"
    echo "\\set ECHO errors"
    echo "\\pset pager off"
    echo
	  echo "SET search_path = $db_main_schema;"
    echo "\\c $DB_NAME"
    echo
    echo "BEGIN;"

    i=0
    while [ $i -le 200 ] ; do
        up=$(printf update%02d.sql $i)
        i=$(($i+1))
        test -f "$up" || continue
        
        echo
        echo "SELECT NOT EXISTS(SELECT 1 FROM schema_updates WHERE filename = '$up') as missing"
        echo "\\gset"
        echo "\\if :missing"
        echo "\\echo Applying $up"
        echo "\\i $up"
        echo
        echo "INSERT INTO schema_updates(filename) VALUES('$up');"
        echo "\\endif"
    done

    echo
    echo "COMMIT;"
    echo "\\echo Success!"
} >> $sql_temp

if [[ -z $no_dry_run ]]; then
    cat $sql_temp;
    echo;
    echo "Execute as: $db_user";
else
    psql_run -f "$sql_temp" ||
        echo "Operation failed";
fi

rm -f "$sql_temp";
